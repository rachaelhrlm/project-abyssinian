{"version":3,"sources":["stores/index.ts","stores/CalculatorStore.ts","components/KeypadButton.tsx","components/Screen.tsx","components/WindowButton.tsx","components/TitleBar.tsx","components/Keypad.tsx","components/Calculator.tsx","components/DesktopIcon.tsx","components/Clock.tsx","components/StartButton.tsx","components/WindowTab.tsx","components/TaskBar.tsx","App.tsx","index.tsx"],"names":["calculatorStore","isHidden","isMaximized","isMinimised","currentOperand","previousOperand","operator","undefined","makeAutoObservable","this","close","action","bound","open","minimise","maximize","restore","clear","delete","compute","number","includes","concat","substr","length","answer","parseFloat","isNaN","toString","type","faWindowMinimize","faWindowRestore","faWindowMaximize","faTimes","observer","value","onClick","className","classNames","icon","getWindowButtonIcon","getWindowButtonOnClick","title","children","topButtons","disabled","position","x","y","show","append","faDivide","setOperator","faPlus","faEquals","faMinus","label","onDoubleClick","useState","time","setTime","useEffect","interval","setInterval","Date","toLocaleTimeString","hour","minute","clearInterval","App","configure","enforceActions","computedRequiresReaction","ReactDOM","render","stores","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7f088e00.chunk.js","sourcesContent":["import { CalculatorStore } from \"./CalculatorStore\";\n\nconst calculatorStore: CalculatorStore = new CalculatorStore();\n\nexport default calculatorStore;\n","import { faWindowMaximize, faWindowMinimize, faWindowRestore } from \"@fortawesome/free-regular-svg-icons\";\nimport { faTimes, IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { action, makeAutoObservable } from \"mobx\";\nexport class CalculatorStore {\n  public isHidden = false;\n  public isMaximized = false;\n  public isMinimised = false;\n  public currentOperand = \"\";\n  public previousOperand = \"\";\n  public operator: string | undefined = undefined;\n\n  constructor() {\n    makeAutoObservable(this, {\n      close: action.bound,\n      open: action.bound,\n      minimise: action.bound,\n      maximize: action.bound,\n      restore: action.bound,\n      clear: action.bound,\n      delete: action.bound,\n      compute: action.bound\n    });\n  }\n\n  public close(): void {\n    this.isHidden = true;\n    this.isMaximized = false;\n    this.clear();\n  }\n\n  public open(): void {\n    this.isHidden = false;\n  }\n\n  public minimise(): void {\n    this.isMinimised = this.isMinimised ? false : true;\n  }\n\n  public maximize(): void {\n    this.isMaximized = true;\n  }\n\n  public restore(): void {\n    this.isMaximized = false;\n  }\n\n  public clear(): void {\n    this.currentOperand = \"\";\n    this.previousOperand = \"\";\n    this.operator = undefined;\n  }\n\n  public append(number: string): void {\n    if (number === \".\" && this.currentOperand.includes(\".\")) {\n      return;\n    }\n    this.currentOperand = this.currentOperand.concat(number);\n  }\n\n  public delete(): void {\n    this.currentOperand = this.currentOperand.substr(0, this.currentOperand.length - 1);\n  }\n\n  public setOperator(operator: string): void {\n    if (this.currentOperand === \"\") return;\n    if (this.previousOperand !== \"\") this.compute();\n    this.previousOperand = this.currentOperand;\n    this.currentOperand = \"\";\n    this.operator = operator;\n  }\n\n  public compute(): void {\n    const currentOperand = parseFloat(this.currentOperand);\n    const previousOperand = parseFloat(this.previousOperand);\n    let answer: number;\n    if (isNaN(currentOperand) || isNaN(previousOperand)) return;\n\n    switch (this.operator) {\n      case \"+\":\n        answer = previousOperand + currentOperand;\n\n        break;\n      case \"-\":\n        answer = previousOperand - currentOperand;\n        break;\n      case \"*\":\n        answer = previousOperand * currentOperand;\n        break;\n      case \"/\":\n        answer = previousOperand / currentOperand;\n        break;\n      default:\n        answer = currentOperand;\n    }\n    this.currentOperand = answer.toString();\n    this.previousOperand = \"\";\n    this.operator = undefined;\n  }\n\n  public get displayOperator(): string | undefined {\n    if (this.operator === \"*\") {\n      return \"x\";\n    } else if (this.operator === \"/\") {\n      return \"รท\";\n    } else {\n      return this.operator;\n    }\n  }\n\n  public getWindowButtonIcon(type: string): IconDefinition {\n    switch (type) {\n      case \"minimize\":\n        return faWindowMinimize;\n      case \"maximize\":\n        if (this.isMaximized) return faWindowRestore;\n        return faWindowMaximize;\n      case \"close\":\n      default:\n        return faTimes;\n    }\n  }\n\n  public getWindowButtonOnClick(type: string): React.MouseEventHandler<HTMLDivElement> {\n    switch (type) {\n      case \"minimize\":\n        return () => {\n          this.minimise();\n        };\n      case \"maximize\":\n        if (this.isMaximized)\n          return () => {\n            this.restore();\n          };\n        return () => {\n          this.maximize();\n        };\n      case \"close\":\n      default:\n        return () => {\n          this.close();\n        };\n    }\n  }\n}\n","import classNames from \"classnames\";\nimport { observer } from \"mobx-react-lite\";\nimport React, { FC, ReactNode } from \"react\";\nimport calculatorStore from \"../stores\";\n\ninterface KeypadButtonProps {\n  value: ReactNode;\n  type?: \"primary\" | \"secondary\";\n  onClick?: React.MouseEventHandler<HTMLDivElement>;\n}\n\nconst KeypadButton: FC<KeypadButtonProps> = ({ value, type = \"primary\", onClick }: KeypadButtonProps) => {\n  return (\n    <div className=\"keypad-button\" onClick={onClick}>\n      <span\n        className={classNames(\n          { \"keypad-primary\": type === \"primary\" },\n          { \"keypad-secondary\": type === \"secondary\" },\n          { maximize: calculatorStore.isMaximized }\n        )}\n      >\n        {value}\n      </span>\n    </div>\n  );\n};\n\nexport default observer(KeypadButton);\n","import classNames from \"classnames\";\nimport { observer } from \"mobx-react-lite\";\nimport React, { FC } from \"react\";\nimport calculatorStore from \"../stores\";\n\nconst Screen: FC = () => {\n  return (\n    <div className={classNames(\"screen\", { \"maximize-screen\": calculatorStore.isMaximized })}>\n      <div className=\"previous\">\n        <span>{calculatorStore.previousOperand}</span>\n        <span>{calculatorStore.operator}</span>\n      </div>\n      <div className=\"current\">\n        <span>{calculatorStore.currentOperand}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default observer(Screen);\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { FC } from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport classNames from \"classnames\";\nimport calculatorStore from \"../stores\";\nimport { IconDefinition } from \"@fortawesome/fontawesome-common-types\";\n\ninterface WindowButtonProps {\n  type?: \"close\" | \"maximize\" | \"minimize\";\n}\n\nconst WindowButton: FC<WindowButtonProps> = ({ type = \"close\" }: WindowButtonProps) => {\n  const icon: IconDefinition = calculatorStore.getWindowButtonIcon(type);\n  const onClick = calculatorStore.getWindowButtonOnClick(type);\n\n  return (\n    <div className=\"window-button\" onClick={onClick}>\n      <span\n        className={classNames({ \"background-secondary\": type === \"close\" }, { \"background-primary\": type !== \"close\" })}\n      >\n        <FontAwesomeIcon icon={icon} className=\"icon\" />\n      </span>\n      {type === \"close\" && <span className=\"background-secondary-cover\" />}\n    </div>\n  );\n};\n\nexport default observer(WindowButton);\n","import { observer } from \"mobx-react-lite\";\nimport React, { FC } from \"react\";\nimport WindowButton from \"./WindowButton\";\n\ninterface TitleBarProps {\n  title: string;\n}\n\nconst TitleBar: FC<TitleBarProps> = ({ title }: TitleBarProps) => {\n  return (\n    <div className=\"title-bar\">\n      <h1>{title}</h1>\n      <div className=\"window-buttons-container\">\n        <WindowButton type=\"minimize\" />\n        <WindowButton type=\"maximize\" />\n        <WindowButton type=\"close\" />\n      </div>\n    </div>\n  );\n};\n\nexport default observer(TitleBar);\n","import classNames from \"classnames\";\nimport { observer } from \"mobx-react-lite\";\nimport React, { FC, ReactNode } from \"react\";\nimport calculatorStore from \"../stores\";\n\ninterface KeypadProps {\n  children?: ReactNode;\n  topButtons?: ReactNode;\n}\nconst Keypad: FC<KeypadProps> = ({ children, topButtons }: KeypadProps) => {\n  return (\n    <>\n      <div className={classNames(\"keypad-top\", { \"maximize-keypad-top\": calculatorStore.isMaximized })}>\n        {topButtons}\n      </div>\n      <div className={classNames(\"keypad\", { \"maximize-keypad\": calculatorStore.isMaximized })}>{children}</div>\n    </>\n  );\n};\n\nexport default observer(Keypad);\n","import React, { FC } from \"react\";\nimport { faDivide, faEquals, faMinus, faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { observer } from \"mobx-react-lite\";\nimport Draggable from \"react-draggable\";\nimport KeypadButton from \"./KeypadButton\";\nimport Screen from \"./Screen\";\nimport TitleBar from \"./TitleBar\";\nimport calculatorStore from \"../stores\";\nimport classNames from \"classnames\";\nimport Keypad from \"./Keypad\";\n\nconst Calculator: FC = () => {\n  if (calculatorStore.isHidden) {\n    return null;\n  }\n  return (\n    <Draggable\n      disabled={calculatorStore.isMaximized}\n      position={calculatorStore.isMaximized ? { x: 0, y: 0 } : undefined}\n    >\n      <div\n        className={classNames(\n          \"calculator\",\n          { show: !calculatorStore.isMinimised },\n          { \"maximize-window\": calculatorStore.isMaximized }\n        )}\n      >\n        <TitleBar title=\"Calculator\" />\n        <div className=\"calc-body\">\n          <div className=\"calc-body-container\">\n            <Screen />\n            <Keypad\n              topButtons={\n                <>\n                  <KeypadButton value=\"AC\" onClick={calculatorStore.clear} />\n                  <KeypadButton value=\"DEL\" onClick={calculatorStore.delete} />\n                </>\n              }\n            >\n              <KeypadButton value=\"1\" onClick={() => calculatorStore.append(\"1\")} />\n              <KeypadButton value=\"2\" onClick={() => calculatorStore.append(\"2\")} />\n              <KeypadButton value=\"3\" onClick={() => calculatorStore.append(\"3\")} />\n              <KeypadButton\n                type=\"secondary\"\n                value={<FontAwesomeIcon icon={faDivide} />}\n                onClick={() => calculatorStore.setOperator(\"/\")}\n              />\n\n              <KeypadButton value=\"4\" onClick={() => calculatorStore.append(\"4\")} />\n              <KeypadButton value=\"5\" onClick={() => calculatorStore.append(\"5\")} />\n              <KeypadButton value=\"6\" onClick={() => calculatorStore.append(\"6\")} />\n              <KeypadButton\n                type=\"secondary\"\n                value={<FontAwesomeIcon icon={faTimes} />}\n                onClick={() => calculatorStore.setOperator(\"*\")}\n              />\n\n              <KeypadButton value=\"7\" onClick={() => calculatorStore.append(\"7\")} />\n              <KeypadButton value=\"8\" onClick={() => calculatorStore.append(\"8\")} />\n              <KeypadButton value=\"9\" onClick={() => calculatorStore.append(\"9\")} />\n              <KeypadButton\n                type=\"secondary\"\n                value={<FontAwesomeIcon icon={faPlus} />}\n                onClick={() => calculatorStore.setOperator(\"+\")}\n              />\n\n              <KeypadButton value=\".\" onClick={() => calculatorStore.append(\".\")} />\n              <KeypadButton value=\"0\" onClick={() => calculatorStore.append(\"0\")} />\n              <KeypadButton\n                type=\"secondary\"\n                value={<FontAwesomeIcon icon={faEquals} />}\n                onClick={() => calculatorStore.compute()}\n              />\n\n              <KeypadButton\n                type=\"secondary\"\n                value={<FontAwesomeIcon icon={faMinus} onClick={() => calculatorStore.setOperator(\"-\")} />}\n              />\n            </Keypad>\n          </div>\n        </div>\n      </div>\n    </Draggable>\n  );\n};\n\nexport default observer(Calculator);\n","import { observer } from \"mobx-react-lite\";\nimport React, { FC } from \"react\";\nimport Draggable from \"react-draggable\";\ninterface DesktopIconProps {\n  onClick?: React.MouseEventHandler<HTMLDivElement>;\n  label?: string;\n}\n\nconst DesktopIcon: FC<DesktopIconProps> = ({ onClick, label }: DesktopIconProps) => {\n  return (\n    <Draggable>\n      <div className=\"desktop-icon\" onDoubleClick={onClick}>\n        <h2>{label}</h2>\n      </div>\n    </Draggable>\n  );\n};\n\nexport default observer(DesktopIcon);\n","import { observer } from \"mobx-react-lite\";\nimport React, { FC, useEffect, useState } from \"react\";\n\nconst Clock: FC = () => {\n  const [time, setTime] = useState<string>(\"\");\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setTime(new Date().toLocaleTimeString(\"en\", { hour: \"numeric\", minute: \"numeric\" }));\n    }, 1000);\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n  return <div className=\"clock\">{time}</div>;\n};\n\nexport default observer(Clock);\n","import { observer } from \"mobx-react-lite\";\nimport React, { FC } from \"react\";\n\nconst StartButton: FC = () => {\n  return (\n    <>\n      <div className=\"start-button\">\n        <span className=\"logo\" /> <span>start</span>\n      </div>\n      <div className=\"start-button-cover\"></div>\n    </>\n  );\n};\n\nexport default observer(StartButton);\n","import classNames from \"classnames\";\nimport { observer } from \"mobx-react-lite\";\nimport React, { FC } from \"react\";\nimport calculatorStore from \"../stores\";\n\nconst WindowTab: FC = () => {\n  if (calculatorStore.isHidden) {\n    return null;\n  }\n  return (\n    <div\n      className={classNames(\"window-tab\", { \"window-tab-active\": !calculatorStore.isMinimised })}\n      onClick={() => calculatorStore.minimise()}\n    >\n      <div className=\"icon\" />\n      <span>Calculator</span>\n    </div>\n  );\n};\n\nexport default observer(WindowTab);\n","import { observer } from \"mobx-react-lite\";\nimport React, { FC } from \"react\";\nimport Clock from \"./Clock\";\nimport StartButton from \"./StartButton\";\nimport WindowTab from \"./WindowTab\";\n\nconst TaskBar: FC = () => {\n  return (\n    <div className=\"task-bar\">\n      <div className=\"main\">\n        <StartButton />\n        <WindowTab />\n      </div>\n      <Clock />\n    </div>\n  );\n};\n\nexport default observer(TaskBar);\n","import React, { FC } from \"react\";\nimport Calculator from \"./components/Calculator\";\nimport DesktopIcon from \"./components/DesktopIcon\";\nimport TaskBar from \"./components/TaskBar\";\nimport calculatorStore from \"./stores\";\nimport \"./styles/main.scss\";\n\nconst App: FC = () => {\n  return (\n    <div className=\"app\">\n      <div className=\"test\">\n        <DesktopIcon label=\"Calculator\" onClick={() => calculatorStore.open()} />\n        <Calculator />\n      </div>\n      <TaskBar />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { configure } from \"mobx\";\nimport { Provider } from \"mobx-react\";\nimport stores from \"./stores\";\n\nconfigure({ enforceActions: \"observed\", computedRequiresReaction: true });\nReactDOM.render(\n  <Provider {...stores}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}